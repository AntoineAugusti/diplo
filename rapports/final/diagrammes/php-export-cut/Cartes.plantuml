@startuml
class Diplo.Cartes.CarteFactory {
    #cases : array = []
    #positions : array = [[[1, 1], [1, 3], [3, 1], [3, 3]], [[1, 13], [1, 15], [3, 13], [3, 15]], [[6, 6], [6, 9], [9, 6], [9, 9]], [[13, 1], [13, 3], [15, 1], [15, 3]], [[13, 13], [13, 15], [15, 13], [15, 15]]]
    #tailleCarre : int = 15
    +creer(partie : Diplo.Parties.Partie)
    -definirPositionsArmeesPourJoueur(joueur : Diplo.Joueurs.Joueur, id : int)
    #getCase(i : int, j : int) : CaseInterface
}
interface Diplo.Cartes.CaseRepository {
    +trouverParId(id : int) : CaseClass
}
class Diplo.Cartes.CaseClass {
    #appends : array = ["est_libre", "id_joueur", "est_occupee", "id_armee", "id_cases_voisines"]
    #casts : array = ["integer"]
    #fillable : array = ["id_carte"]
    #hidden : array = ["id_carte", "armee", "created_at", "updated_at"]
    #table : string = "cases"
    +armee() : Illuminate.Database.Eloquent.Relations.HasOne
    +carte() : Illuminate.Database.Eloquent.Relations.BelongsTo
    +casesVoisines() : Illuminate.Database.Eloquent.Relations.BelongsToMany
    +estOccupee() : bool
    +getArmee() : Diplo.Armees.Armee
    +getCarte() : Carte
    +getCasesVoisines() : CaseInterface[]
    +getCasesVoisinesIds() : int[]
    +getEstLibreAttribute() : bool
    +getEstOccupeeAttribute() : bool
    +getId() : int
    +getIdArmeeAttribute() : int|null
    +getIdCasesVoisinesAttribute() : int[]
    +getIdJoueurAttribute() : int
    +getJoueur() : Diplo.Joueurs.Joueur
    +joueur() : Diplo.Joueurs.Joueur
    +setArmee(armee : Diplo.Armees.Armee)
}
class Diplo.Cartes.CaseClass extends Illuminate.Database.Eloquent.Model
class Diplo.Cartes.CaseClass implements Diplo.Cartes.CaseInterface
class Diplo.Cartes.Carte {
    #fillable : array = ["id_partie"]
    +cases() : Illuminate.Database.Eloquent.Relations.HasMany
    +getCases() : CaseClass[]
    +getId() : int
    +getPartie() : Diplo.Parties.Partie
    +partie() : Illuminate.Database.Eloquent.Relations.BelongsTo
}
class Diplo.Cartes.Carte extends Illuminate.Database.Eloquent.Model
class Diplo.Cartes.CaseVoisine {
    #casts : array = ["integer", "integer", "integer"]
    #table : string = "cases_cases"
}
class Diplo.Cartes.CaseVoisine extends Illuminate.Database.Eloquent.Model
class Diplo.Cartes.EloquentCaseRepository {
    +trouverParId(id : int) : CaseClass
}
class Diplo.Cartes.EloquentCaseRepository implements Diplo.Cartes.CaseRepository
interface Diplo.Cartes.CaseInterface {
    +estOccupee() : bool
    +getArmee() : Diplo.Armees.Armee
    +getCasesVoisines() : CaseInterface[]
    +getCasesVoisinesIds() : int[]
    +getId() : int
    +getJoueur() : Diplo.Joueurs.Joueur
    +setArmee(armee : Diplo.Armees.Armee)
}
@enduml
